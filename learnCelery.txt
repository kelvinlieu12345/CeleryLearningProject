from celery import Celery 

app = Celery ('task', broker='pyamqp://guest@localhost/')

@app.task
def add(x, y):
  return x + y


from tasks import add
add.delay(5, 5)


#Keeping result
result.ready()

#When the result rarely used and it turns the asyn-chronous call into a synchronous one

result.get(timeout=1)

#There is exception, get() will re-raise the exception, which can be override this by specifying the propagate argument

result.get(propagate=False)


#When the result raise an exception, original tracebackaccess can be gained
result.traceback


#Configuation
#Change taks_serialicaer to configure the default serializer used for serializing task payloads
app.conf.task_serializer ='json'

#If many settings configured by at once, update can be used
app.conf.update(
  task_serializer='json',
  accept_content=['json'],
  result_serializer='json',
  timezone='Europe/Oslo',
  enable_utc=True,
)
